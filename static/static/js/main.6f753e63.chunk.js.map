{"version":3,"sources":["Assets/images/background.jpg","Component/Homepage.js","Component/Login.js","Component/NaviBar.js","Component/Register.js","Component/Map.js","Component/Maps.js","Component/App.js","serviceWorker.js","index.js","Assets/images/logo.png"],"names":["module","exports","getWidth","window","Responsive","onlyTablet","minWidth","innerWidth","HomepageHeading","mobile","Container","text","Header","as","content","inverted","style","fontSize","fontWeight","marginBottom","marginTop","href","primary","size","Button","color","Icon","name","DesktopContainer","state","hideFixedMenu","setState","fixed","showFixedMenu","children","this","props","Visibility","once","onBottomPassed","onBottomPassedReverse","Segment","textAlign","minHeight","padding","backgroundImage","background","backgroundSize","vertical","Component","ResponsiveContainer","HomepageLayout","Divider","className","horizontal","margin","textTransform","Grid","divided","stackable","Row","Column","width","List","link","Item","LoginForm","height","verticalAlign","maxWidth","src","logo","Form","stacked","Input","fluid","icon","iconPosition","placeholder","type","Message","NaviBar","Navbar","bg","variant","Brand","Nav","Link","inline","FormControl","RegisterForm","mapStyles","position","CurrentLocation","initialCenter","lat","lng","currentLocation","prevProps","prevState","google","loadMap","recenterMap","map","current","maps","center","LatLng","panTo","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","mapRef","refs","node","ReactDOM","findDOMNode","zoom","mapConfig","Object","assign","Map","React","Children","c","cloneElement","mapCenter","ref","renderChildren","defaultProps","visible","Maps","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","e","onClose","Group","onClick","onclose","GoogleApiWrapper","apiKey","App","exact","path","component","HomePage","Boolean","location","hostname","match","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"mGAAAA,EAAOC,QAAU,IAA0B,wC,kUCuBrCC,EAAW,WAGb,MAFgC,qBAAXC,OAENC,IAAWC,WAAWC,SAAWH,OAAOI,YAQrDC,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACpB,kBAACC,EAAA,EAAD,CAAWC,MAAI,GACX,kBAACC,EAAA,EAAD,CACIC,GAAG,KACHC,QAAQ,UACRC,UAAQ,EACRC,MAAO,CACHC,SAAUR,EAAS,MAAQ,MAC3BS,WAAY,SACZC,aAAc,EACdC,UAAWX,EAAS,QAAU,SAItC,kBAACG,EAAA,EAAD,CACIC,GAAG,KACHC,QAAQ,2CACRC,UAAQ,EACRC,MAAO,CACHC,SAAUR,EAAS,QAAU,QAC7BS,WAAY,SACZE,UAAWX,EAAS,QAAU,WAItC,uBAAGY,KAAK,SAASC,SAAO,EAACC,KAAK,QAC1B,kBAACC,EAAA,EAAD,CAAQR,MAAO,CAACS,MAAO,YAAvB,eACI,kBAACC,EAAA,EAAD,CAAMC,KAAK,oBAgBrBC,E,2MACFC,MAAQ,G,EAERC,cAAgB,kBAAM,EAAKC,SAAS,CAAEC,OAAO,K,EAC7CC,cAAgB,kBAAM,EAAKF,SAAS,CAAEC,OAAO,K,wEAGnC,IACEE,EAAaC,KAAKC,MAAlBF,SACUC,KAAKN,MAAfG,MAER,OACI,kBAAC5B,EAAA,EAAD,CAAYF,SAAUA,EAAUI,SAAUF,IAAWC,WAAWC,UAC5D,kBAAC+B,EAAA,EAAD,CACIC,MAAM,EACNC,eAAgBJ,KAAKF,cACrBO,sBAAuBL,KAAKL,eAE5B,kBAACW,EAAA,EAAD,CACI1B,UAAQ,EACR2B,UAAU,SACV1B,MAAO,CAAE2B,UAAW,IAAKC,QAAS,UAAWC,gBAAgB,OAAD,OAASC,IAAT,KAAwBC,eAAgB,SACpGC,UAAQ,GAGR,kBAAC,EAAD,QAIPd,O,GA7Bce,aAuCzBC,EAAsB,SAAC,GAAD,IAAGhB,EAAH,EAAGA,SAAH,OACxB,6BACI,kBAAC,EAAD,KAAmBA,KAgFZiB,EAvEQ,kBACnB,kBAAC,EAAD,KAEI,kBAACV,EAAA,EAAD,CAASzB,MAAO,CAAE4B,QAAS,WAAaI,UAAQ,GAC5C,kBAACtC,EAAA,EAAD,CAAWC,MAAI,GACX,kBAACC,EAAA,EAAD,CAAQC,GAAG,KAAKG,MAAO,CAAEC,SAAU,QAAnC,6BAGA,uBAAGD,MAAO,CAAEC,SAAU,WAAtB,4NAKA,kBAACO,EAAA,EAAD,CAAQX,GAAG,IAAIU,KAAK,SAApB,aAGA,kBAAC6B,EAAA,EAAD,CACIvC,GAAG,KACHwC,UAAU,SACVC,YAAU,EACVtC,MAAO,CAAEuC,OAAQ,UAAWC,cAAe,cAE3C,uBAAGnC,KAAK,KAAR,iBAEJ,kBAACT,EAAA,EAAD,CAAQC,GAAG,KAAKG,MAAO,CAAEC,SAAU,QAAnC,mCAGA,uBAAGD,MAAO,CAAEC,SAAU,WAAtB,yQAKA,kBAACO,EAAA,EAAD,CAAQX,GAAG,IAAIU,KAAK,SAApB,0BAKR,kBAACkB,EAAA,EAAD,CAAS1B,UAAQ,EAACiC,UAAQ,EAAChC,MAAO,CAAE4B,QAAS,YACzC,kBAAClC,EAAA,EAAD,KACI,kBAAC+C,EAAA,EAAD,CAAMC,SAAO,EAAC3C,UAAQ,EAAC4C,WAAS,GAC5B,kBAACF,EAAA,EAAKG,IAAN,KACI,kBAACH,EAAA,EAAKI,OAAN,CAAaC,MAAO,GAChB,kBAAClD,EAAA,EAAD,CAAQG,UAAQ,EAACF,GAAG,KAAKC,QAAQ,UACjC,kBAACiD,EAAA,EAAD,CAAMC,MAAI,EAACjD,UAAQ,GACf,kBAACgD,EAAA,EAAKE,KAAN,CAAWpD,GAAG,KAAd,WACA,kBAACkD,EAAA,EAAKE,KAAN,CAAWpD,GAAG,KAAd,cACA,kBAACkD,EAAA,EAAKE,KAAN,CAAWpD,GAAG,KAAd,WAGR,kBAAC4C,EAAA,EAAKI,OAAN,CAAaC,MAAO,GAChB,kBAAClD,EAAA,EAAD,CAAQG,UAAQ,EAACF,GAAG,KAAKC,QAAQ,aACjC,kBAACiD,EAAA,EAAD,CAAMC,MAAI,EAACjD,UAAQ,GACf,kBAACgD,EAAA,EAAKE,KAAN,CAAWpD,GAAG,KAAd,aACA,kBAACkD,EAAA,EAAKE,KAAN,CAAWpD,GAAG,KAAd,OACA,kBAACkD,EAAA,EAAKE,KAAN,CAAWpD,GAAG,KAAd,oBAGR,kBAAC4C,EAAA,EAAKI,OAAN,CAAaC,MAAO,GAChB,kBAAClD,EAAA,EAAD,CAAQC,GAAG,KAAKE,UAAQ,GAAxB,iBAGA,gE,mCC3JbmD,EA7BG,kBACd,kBAACT,EAAA,EAAD,CAAMf,UAAU,SAAS1B,MAAO,CAAEmD,OAAQ,SAAWC,cAAc,UAC/D,kBAACX,EAAA,EAAKI,OAAN,CAAa7C,MAAO,CAAEqD,SAAU,MAC5B,kBAACzD,EAAA,EAAD,CAAQC,GAAG,KAAKY,MAAM,OAAOiB,UAAU,UACnC,yBAAK4B,IAAKC,MADd,2BAGA,kBAACC,EAAA,EAAD,CAAMjD,KAAK,SACP,kBAACkB,EAAA,EAAD,CAASgC,SAAO,GACZ,kBAACD,EAAA,EAAKE,MAAN,CAAYC,OAAK,EAACC,KAAK,OAAOC,aAAa,OAAOC,YAAY,mBAC9D,kBAACN,EAAA,EAAKE,MAAN,CACIC,OAAK,EACLC,KAAK,OACLC,aAAa,OACbC,YAAY,WACZC,KAAK,aAGT,kBAACvD,EAAA,EAAD,CAAQC,MAAM,OAAOkD,OAAK,EAACpD,KAAK,SAAhC,WAKR,kBAACyD,EAAA,EAAD,mBACe,uBAAG3D,KAAK,iBAAR,e,8DCAZ4D,E,iLArBP,OACI,6BACI,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,QACtB,kBAACF,EAAA,EAAOG,MAAR,CAAchE,KAAK,SAAnB,WACA,kBAACiE,EAAA,EAAD,CAAKjC,UAAU,WACX,kBAACiC,EAAA,EAAIC,KAAL,CAAUlE,KAAK,KAAf,QACA,kBAACiE,EAAA,EAAIC,KAAL,CAAUlE,KAAK,KAAf,YACA,kBAACiE,EAAA,EAAIC,KAAL,CAAUlE,KAAK,cAAf,SACA,kBAACiE,EAAA,EAAIC,KAAL,CAAUlE,KAAK,iBAAf,aAEJ,kBAAC,IAAD,CAAMmE,QAAM,GACR,kBAACC,EAAA,EAAD,CAAaV,KAAK,OAAOD,YAAY,SAASzB,UAAU,YACxD,kBAAC,IAAD,CAAQ+B,QAAQ,gBAAhB,iB,GAdFnC,aCoCPyC,EApCM,kBACjB,kBAACjC,EAAA,EAAD,CAAMf,UAAU,SAAS1B,MAAO,CAAEmD,OAAQ,SAAWC,cAAc,UAC/D,kBAACX,EAAA,EAAKI,OAAN,CAAa7C,MAAO,CAAEqD,SAAU,MAC5B,kBAACzD,EAAA,EAAD,CAAQC,GAAG,KAAKY,MAAM,OAAOiB,UAAU,UACnC,yBAAK4B,IAAKC,MADd,0BAGA,kBAACC,EAAA,EAAD,CAAMjD,KAAK,SACP,kBAACkB,EAAA,EAAD,CAASgC,SAAO,GACZ,kBAACD,EAAA,EAAKE,MAAN,CAAYC,OAAK,EAACC,KAAK,OAAOC,aAAa,OAAOC,YAAY,mBAC9D,kBAACN,EAAA,EAAKE,MAAN,CACIC,OAAK,EACLC,KAAK,OACLC,aAAa,OACbC,YAAY,WACZC,KAAK,aAET,kBAACP,EAAA,EAAKE,MAAN,CACIC,OAAK,EACLC,KAAK,OACLC,aAAa,OACbC,YAAY,wBACZC,KAAK,aAGT,kBAACvD,EAAA,EAAD,CAAQC,MAAM,OAAOkD,OAAK,EAACpD,KAAK,SAAhC,aAKR,kBAACyD,EAAA,EAAD,iCAC6B,uBAAG3D,KAAK,cAAR,a,SC/BnCsE,EACG,CACDC,SAAU,WACV9B,MAAO,OACPK,OAAQ,QAIV0B,E,YACF,WAAYzD,GAAQ,IAAD,6BACf,4CAAMA,KAEoBA,MAAM0D,cAAxBC,EAHO,EAGPA,IAAKC,EAHE,EAGFA,IAHE,OAIf,EAAKnE,MAAQ,CACToE,gBAAiB,CACbF,IAAKA,EACLC,IAAKA,IAPE,E,gFAWAE,EAAWC,GACtBD,EAAUE,SAAWjE,KAAKC,MAAMgE,QAChCjE,KAAKkE,UAELF,EAAUF,kBAAoB9D,KAAKN,MAAMoE,iBACzC9D,KAAKmE,gB,oCAIT,IAAMC,EAAMpE,KAAKoE,IACXC,EAAUrE,KAAKN,MAAMoE,gBAGrBQ,EADStE,KAAKC,MAAMgE,OACNK,KAEpB,GAAIF,EAAK,CACL,IAAIG,EAAS,IAAID,EAAKE,OAAOH,EAAQT,IAAKS,EAAQR,KAClDO,EAAIK,MAAMF,M,0CAGG,IAAD,OACZvE,KAAKC,MAAMyE,6BACPC,WAAaA,UAAUC,aACvBD,UAAUC,YAAYC,oBAAmB,SAAAC,GACrC,IAAMC,EAASD,EAAIC,OACnB,EAAKnF,SAAS,CACVkE,gBAAiB,CACbF,IAAKmB,EAAOC,SACZnB,IAAKkB,EAAOE,gBAMhCjF,KAAKkE,Y,gCAGL,GAAIlE,KAAKC,OAASD,KAAKC,MAAMgE,OAAQ,KAG3BK,EADatE,KAAKC,MAAhBgE,OACYK,KAEdY,EAASlF,KAAKmF,KAAKf,IAGnBgB,EAAOC,IAASC,YAAYJ,GAE5BK,EAASvF,KAAKC,MAAdsF,KAV2B,EAWZvF,KAAKN,MAAMoE,gBAAxBF,EAXyB,EAWzBA,IAAKC,EAXoB,EAWpBA,IACPU,EAAS,IAAID,EAAKE,OAAOZ,EAAKC,GAC9B2B,EAAYC,OAAOC,OACrB,GACA,CACInB,OAAQA,EACRgB,KAAMA,IAKdvF,KAAKoE,IAAM,IAAIE,EAAKqB,IAAIP,EAAMI,M,uCAGpB,IAAD,OACLzF,EAAaC,KAAKC,MAAlBF,SAER,GAAKA,EAEL,OAAO6F,IAAMC,SAASzB,IAAIrE,GAAU,SAAA+F,GAChC,GAAKA,EACL,OAAOF,IAAMG,aAAaD,EAAG,CACzB1B,IAAK,EAAKA,IACVH,OAAQ,EAAKhE,MAAMgE,OACnB+B,UAAW,EAAKtG,MAAMoE,uB,+BAK9B,IAAMjF,EAAQ4G,OAAOC,OAAO,GAAIlC,GAChC,OACI,6BACI,yBAAK3E,MAAOA,EAAOoH,IAAI,OAAvB,kBAGCjG,KAAKkG,sB,GA/FQN,IAAM9E,WAoGrB4C,IAEfA,EAAgByC,aAAe,CAC3BZ,KAAM,GACN5B,cAAe,CACXC,IAAK,SACLC,KAAM,SAEVa,6BAA6B,EAC7B0B,SAAS,G,ICnHPC,E,2MAEF3G,MAAQ,CACJ4G,mBAAmB,EACnBC,aAAc,GACdC,cAAe,I,EAGnBC,cAAgB,SAACxG,EAAOyG,EAAQC,GAAhB,OACZ,EAAK/G,SAAS,CACV4G,cAAevG,EACfsG,aAAcG,EACdJ,mBAAmB,K,EAG3BM,QAAU,SAAA3G,GACF,EAAKP,MAAM4G,mBACX,EAAK1G,SAAS,CACV0G,mBAAmB,EACnBC,aAAc,Q,wEAMtB,OACI,kBAACjG,EAAA,EAAQuG,MAAT,CAAe1F,YAAU,GACrB,kBAACb,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,KACI,kBAAC,EAAD,CACIoE,6BAA2B,EAC3BT,OAAQjE,KAAKC,MAAMgE,QAEnB,kBAAC,SAAD,CACI6C,QAAS9G,KAAKyG,cACdjH,KAAM,qBAEV,kBAAC,aAAD,CACIkH,OAAQ1G,KAAKN,MAAM6G,aACnBH,QAASpG,KAAKN,MAAM4G,kBACpBS,QAAS/G,KAAK4G,SAEd,6BACI,4BAAK5G,KAAKN,MAAM8G,cAAchH,e,GA5C3CsB,aAuDJkG,6BAAiB,CAC5BC,OAAQ,2CADGD,CAEZX,GCvCYa,MAdf,WACE,OACI,kBAAC,IAAD,KACE,yBAAKhG,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOiG,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOF,KAAK,aAAaC,UAAWtF,IACpC,kBAAC,IAAD,CAAOqF,KAAK,gBAAgBC,UAAW9D,IACvC,kBAAC,IAAD,CAAO6D,KAAK,QAAQC,UAAWhB,OCLvBkB,QACW,cAA7BvJ,OAAOwJ,SAASC,UAEe,UAA7BzJ,OAAOwJ,SAASC,UAEhBzJ,OAAOwJ,SAASC,SAASC,MACvB,2D,cCVNrC,IAASsC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBlD,WACrBA,UAAUmD,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,mBEnInBrK,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.6f753e63.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.66beb4ff.jpg\";","import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport {\n    Button,\n    Container,\n    Divider,\n    Grid,\n    Header,\n    Icon,\n    Image,\n    List,\n    Menu,\n    Responsive,\n    Segment,\n    Sidebar,\n    Visibility,\n} from 'semantic-ui-react'\nimport background from '../Assets/images/background.jpg';\nimport { Redirect, Link } from 'react-router-dom';\n\n// Heads up!\n// We using React Static to prerender our docs with server side rendering, this is a quite simple solution.\n// For more advanced usage please check Responsive docs under the \"Usage\" section.\nconst getWidth = () => {\n    const isSSR = typeof window === 'undefined'\n\n    return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\n/* eslint-disable react/no-multi-comp */\n/* Heads up! HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled components for\n * such things.\n */\n\nconst HomepageHeading = ({ mobile }) => (\n    <Container text>\n        <Header\n            as='h1'\n            content='TripHub'\n            inverted\n            style={{\n                fontSize: mobile ? '2em' : '4em',\n                fontWeight: 'normal',\n                marginBottom: 0,\n                marginTop: mobile ? '1.5em' : '3em',\n            }}\n        />\n\n        <Header\n            as='h2'\n            content='Trip wherever you want when you want to.'\n            inverted\n            style={{\n                fontSize: mobile ? '1.5em' : '1.7em',\n                fontWeight: 'normal',\n                marginTop: mobile ? '0.5em' : '1.5em',\n            }}\n        />\n\n        <a href=\"./maps\" primary size='huge'>\n            <Button style={{color: '#20B2AA'}}> Get Started\n                <Icon name='right arrow' />\n            </Button>\n        </a>\n\n\n    </Container>\n)\n\nHomepageHeading.propTypes = {\n    mobile: PropTypes.bool,\n}\n\n/* Heads up!\n * Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\n * It can be more complicated, but you can create really flexible markup.\n */\nclass DesktopContainer extends Component {\n    state = {};\n\n    hideFixedMenu = () => this.setState({ fixed: false })\n    showFixedMenu = () => this.setState({ fixed: true })\n\n\n    render() {\n        const { children } = this.props\n        const { fixed } = this.state\n\n        return (\n            <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n                <Visibility\n                    once={false}\n                    onBottomPassed={this.showFixedMenu}\n                    onBottomPassedReverse={this.hideFixedMenu}\n                >\n                    <Segment\n                        inverted\n                        textAlign='center'\n                        style={{ minHeight: 700, padding: '1em 0em', backgroundImage: `url(${background})`, backgroundSize: 'cover'}}\n                        vertical\n                    >\n\n                        <HomepageHeading />\n                    </Segment>\n                </Visibility>\n\n                {children}\n            </Responsive>\n        )\n    }\n}\n\nDesktopContainer.propTypes = {\n    children: PropTypes.node,\n}\n\nconst ResponsiveContainer = ({ children }) => (\n    <div>\n        <DesktopContainer>{children}</DesktopContainer>\n        {/*<MobileContainer>{children}</MobileContainer>*/}\n    </div>\n)\n\nResponsiveContainer.propTypes = {\n    children: PropTypes.node,\n}\n\nconst HomepageLayout = () => (\n    <ResponsiveContainer>\n\n        <Segment style={{ padding: '8em 0em' }} vertical>\n            <Container text>\n                <Header as='h3' style={{ fontSize: '2em' }}>\n                    Why is TripHub sooo~ good\n                </Header>\n                <p style={{ fontSize: '1.33em' }}>\n                    Trip planner is designed to make plan for travelers. Instead of just listing famous tourist\n                    attractions like many other travel websites, trip planner could design an optimized travel\n                    route with detailed time schedule\n                </p>\n                <Button as='a' size='large'>\n                    Read More\n                </Button>\n                <Divider\n                    as='h4'\n                    className='header'\n                    horizontal\n                    style={{ margin: '3em 0em', textTransform: 'uppercase' }}\n                >\n                    <a href='#'>Case Studies</a>\n                </Divider>\n                <Header as='h3' style={{ fontSize: '2em' }}>\n                    Did We Tell You About Our Plan?\n                </Header>\n                <p style={{ fontSize: '1.33em' }}>\n                    Our trip planning project is focused on recommending detailed personalized trip plans\n                    to different users according to their specific interests. In other words, our website’s\n                    job is to help different users make choices when they hope to travel to somewhere.\n                </p>\n                <Button as='a' size='large'>\n                    I'm Quite Interested\n                </Button>\n            </Container>\n        </Segment>\n        <Segment inverted vertical style={{ padding: '5em 0em' }}>\n            <Container>\n                <Grid divided inverted stackable>\n                    <Grid.Row>\n                        <Grid.Column width={3}>\n                            <Header inverted as='h4' content='About' />\n                            <List link inverted>\n                                <List.Item as='a'>Members</List.Item>\n                                <List.Item as='a'>Contact Us</List.Item>\n                                <List.Item as='a'>Plans</List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={3}>\n                            <Header inverted as='h4' content='Services' />\n                            <List link inverted>\n                                <List.Item as='a'>Solutions</List.Item>\n                                <List.Item as='a'>FAQ</List.Item>\n                                <List.Item as='a'>Favorite Color</List.Item>\n                            </List>\n                        </Grid.Column>\n                        <Grid.Column width={7}>\n                            <Header as='h4' inverted>\n                                Footer Header\n                            </Header>\n                            <p>\n                                We are GROUP 21 -- TRIPHUB\n                            </p>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Container>\n        </Segment>\n    </ResponsiveContainer>\n)\nexport default HomepageLayout;","import React from 'react'\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\nimport logo from '../Assets/images/logo.png'\n\nconst LoginForm = () => (\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as='h2' color='teal' textAlign='center'>\n                <img src={logo} /> Log-in to your account\n            </Header>\n            <Form size='large'>\n                <Segment stacked>\n                    <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' />\n                    <Form.Input\n                        fluid\n                        icon='lock'\n                        iconPosition='left'\n                        placeholder='Password'\n                        type='password'\n                    />\n\n                    <Button color='teal' fluid size='large'>\n                        Login\n                    </Button>\n                </Segment>\n            </Form>\n            <Message>\n                New to us? <a href='/registerform'>Sign Up</a>\n            </Message>\n        </Grid.Column>\n    </Grid>\n)\n\nexport default LoginForm","import React, {Component} from 'react';\nimport {Navbar, Nav, NavDropdown, Form, FormControl, Button} from 'react-bootstrap';\nimport divWithClassName from \"react-bootstrap/esm/utils/divWithClassName\"\n\nclass NaviBar extends Component {\n    render() {\n        return (\n            <div>\n                <Navbar bg=\"dark\" variant=\"dark\">\n                    <Navbar.Brand href=\"#home\">TripHub</Navbar.Brand>\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"/\">Home</Nav.Link>\n                        <Nav.Link href=\"#\">About US</Nav.Link>\n                        <Nav.Link href=\"/loginform\">Login</Nav.Link>\n                        <Nav.Link href=\"/registerform\">Register</Nav.Link>\n                    </Nav>\n                    <Form inline>\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                        <Button variant=\"outline-info\">Search</Button>\n                    </Form>\n                </Navbar>\n\n            </div>\n        )\n    }\n}\n\nexport default NaviBar;","import React from 'react'\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\nimport logo from '../Assets/images/logo.png'\n\nconst RegisterForm = () => (\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as='h2' color='teal' textAlign='center'>\n                <img src={logo} /> Register your account\n            </Header>\n            <Form size='large'>\n                <Segment stacked>\n                    <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' />\n                    <Form.Input\n                        fluid\n                        icon='lock'\n                        iconPosition='left'\n                        placeholder='Password'\n                        type='password'\n                    />\n                    <Form.Input\n                        fluid\n                        icon='lock'\n                        iconPosition='left'\n                        placeholder='Confirm Your Password'\n                        type='password'\n                    />\n\n                    <Button color='teal' fluid size='large'>\n                        Sign Up\n                    </Button>\n                </Segment>\n            </Form>\n            <Message>\n                Already have an account? <a href='/loginform'>Login</a>\n            </Message>\n        </Grid.Column>\n    </Grid>\n)\n\nexport default RegisterForm","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst mapStyles = {\n    map: {\n        position: 'absolute',\n        width: '100%',\n        height: '100%'\n    }\n};\n\nclass CurrentLocation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { lat, lng } = this.props.initialCenter;\n        this.state = {\n            currentLocation: {\n                lat: lat,\n                lng: lng\n            }\n        };\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.google !== this.props.google) {\n            this.loadMap();\n        }\n        if (prevState.currentLocation !== this.state.currentLocation) {\n            this.recenterMap();\n        }\n    }\n    recenterMap() {\n        const map = this.map;\n        const current = this.state.currentLocation;\n\n        const google = this.props.google;\n        const maps = google.maps;\n\n        if (map) {\n            let center = new maps.LatLng(current.lat, current.lng);\n            map.panTo(center);\n        }\n    }\n    componentDidMount() {\n        if (this.props.centerAroundCurrentLocation) {\n            if (navigator && navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(pos => {\n                    const coords = pos.coords;\n                    this.setState({\n                        currentLocation: {\n                            lat: coords.latitude,\n                            lng: coords.longitude\n                        }\n                    });\n                });\n            }\n        }\n        this.loadMap();\n    }\n    loadMap() {\n        if (this.props && this.props.google) {\n            // checks if google is available\n            const { google } = this.props;\n            const maps = google.maps;\n\n            const mapRef = this.refs.map;\n\n            // reference to the actual DOM element\n            const node = ReactDOM.findDOMNode(mapRef);\n\n            let { zoom } = this.props;\n            const { lat, lng } = this.state.currentLocation;\n            const center = new maps.LatLng(lat, lng);\n            const mapConfig = Object.assign(\n                {},\n                {\n                    center: center,\n                    zoom: zoom\n                }\n            );\n\n            // maps.Map() is constructor that instantiates the map\n            this.map = new maps.Map(node, mapConfig);\n        }\n    }\n    renderChildren() {\n        const { children } = this.props;\n\n        if (!children) return;\n\n        return React.Children.map(children, c => {\n            if (!c) return;\n            return React.cloneElement(c, {\n                map: this.map,\n                google: this.props.google,\n                mapCenter: this.state.currentLocation\n            });\n        });\n    }\n    render() {\n        const style = Object.assign({}, mapStyles.map);\n        return (\n            <div>\n                <div style={style} ref=\"map\">\n                    Loading map...\n                </div>\n                {this.renderChildren()}\n            </div>\n        );\n    }\n}\nexport default CurrentLocation;\n\nCurrentLocation.defaultProps = {\n    zoom: 16,\n    initialCenter: {\n        lat: 43.087150,\n        lng: -89.439800\n    },\n    centerAroundCurrentLocation: false,\n    visible: true\n};","import { Map, GoogleApiWrapper, Marker, InfoWindow } from 'google-maps-react';\nimport React, {Component} from 'react';\nimport CurrentLocation from './Map';\nimport { Segment } from 'semantic-ui-react'\n\nclass Maps extends Component {\n\n    state = {\n        showingInfoWindow: false,  //Hides or the shows the infoWindow\n        activeMarker: {},          //Shows the active marker upon click\n        selectedPlace: {}          //Shows the infoWindow to the selected place upon a marker\n    };\n\n    onMarkerClick = (props, marker, e) =>\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true\n        });\n\n    onClose = props => {\n        if (this.state.showingInfoWindow) {\n            this.setState({\n                showingInfoWindow: false,\n                activeMarker: null\n            });\n        }\n    };\n\n    render() {\n        return (\n            <Segment.Group horizontal>\n                <Segment>left</Segment>\n                <Segment>middle</Segment>\n                <Segment>\n                    <CurrentLocation\n                        centerAroundCurrentLocation\n                        google={this.props.google}\n                    >\n                        <Marker\n                            onClick={this.onMarkerClick}\n                            name={'current location'}\n                        />\n                        <InfoWindow\n                            marker={this.state.activeMarker}\n                            visible={this.state.showingInfoWindow}\n                            onclose={this.onClose}\n                        >\n                            <div>\n                                <h4>{this.state.selectedPlace.name}</h4>\n                            </div>\n                        </InfoWindow>\n                    </CurrentLocation>\n                </Segment>\n            </Segment.Group>\n        );\n    }\n\n}\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyAyesbQMyKVVbBgKVi2g6VX7mop2z96jBo'\n})(Maps);","import React from 'react';\nimport '../App.css';\nimport HomePage from \"./Homepage\";\nimport LoginForm from \"./Login\";\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport NaviBar from \"./NaviBar\"\nimport RegisterForm from \"./Register\";\nimport Maps from \"./Maps\";\n\nfunction App() {\n  return (\n      <Router>\n        <div className=\"App\">\n            <NaviBar/>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route path=\"/loginform\" component={LoginForm} />\n            <Route path=\"/registerform\" component={RegisterForm} />\n            <Route path=\"/maps\" component={Maps} />\n        </div>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Component/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'semantic-ui-less/semantic.less'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.d3e0e08d.png\";"],"sourceRoot":""}